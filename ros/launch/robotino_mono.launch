<launch>

  <rosparam file="$(find common)/config/parameters.yaml" />

  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find common)/config/rviz_orb_slam2.rviz">
  </node>

  <param name="robotino_description" command="$(find xacro)/xacro '$(find common)/src/virtual_robot/robotino.xacro'"/>

  <!--node pkg="tf" type="static_transform_publisher" name="" args="0 0 0 0 0 0  map chassis 50">
  </node-->
  <node pkg="tf" type="static_transform_publisher" name="" args="0 .01 .2 -1.570796327 0 0 tof_sensor pico_flexx_link 50"> 
  </node>
  <node pkg="tf" type="static_transform_publisher" name="tf_p2p" args="0 0 0 0 0 -1.570796327  pico_flexx_link pico_flexx_optical_frame 50">
  </node>
  <node pkg="tf" type="static_transform_publisher" name="tf_c2c" args="-.05 0 .15 0 0 0  chassis computing_unit 50">
  </node>
  <node pkg="tf" type="static_transform_publisher" name="tf_c2s" args="0 0 0 0 0 0  chassis sensor_housing 50">
  </node>
  <node pkg="tf" type="static_transform_publisher" name="tf_s2t" args="0 0 0 0 0 0  sensor_housing tof_sensor 50">
  </node>


  <node name="orb_slam2_mono" pkg="orb_slam2_ros"
      type="orb_slam2_ros_mono" output="screen">

       <param name="publish_pointcloud" type="bool" value="true" />
       <param name="publish_pose" type="bool" value="true" />
       <param name="localize_only" type="bool" value="false" />
       <param name="reset_map" type="bool" value="false" />

       <!-- static parameters -->
       <param name="load_map" type="bool" value="false" />
       <param name="map_file" type="string" value="map.bin" />
       <param name="voc_file" type="string" value="$(find orb_slam2_ros)/orb_slam2/Vocabulary/ORBvoc.txt" />

       <param name="pointcloud_frame_id" type="string" value="map" />
       <param name="camera_frame_id" type="string" value="sensor_housing" />
       <param name="target_frame_id" type="string" value="chassis"/>
       <param name="min_num_kf_in_map" type="int" value="5" />

       <!-- ORB parameters -->
       <param name="/ORBextractor/nFeatures" type="int" value="2000" />
       <param name="/ORBextractor/scaleFactor" type="double" value="1.2" />
       <param name="/ORBextractor/nLevels" type="int" value="8" />
       <param name="/ORBextractor/iniThFAST" type="int" value="20" />
       <param name="/ORBextractor/minThFAST" type="int" value="7" />

       <!-- Camera parameters -->
       <!-- Camera frames per second -->
       <param name="camera_fps" type="int" value="30" />
       <!-- Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale) -->
       <param name="camera_rgb_encoding" type="bool" value="true" />

        <!-- Camera calibration parameters -->
        <!--If the node should wait for a camera_info topic to take the camera calibration data-->
       <param name="load_calibration_from_cam" type="bool" value="false" />
       <!-- Camera calibration and distortion parameters (OpenCV) -->
      <param name="camera_fx" type="double" value="615.6707153320312" />
      <param name="camera_fy" type="double" value="615.962158203125" />
      <param name="camera_cx" type="double" value="328.0010681152344" />
      <param name="camera_cy" type="double" value="241.31031799316406" />
       <!-- Camera calibration and distortion parameters (OpenCV) -->
      <param name="camera_k1" type="double" value="0.0" />
      <param name="camera_k2" type="double" value="0.0" />
      <param name="camera_p1" type="double" value="0.0" />
      <param name="camera_p2" type="double" value="0.0" />
      <param name="camera_k3" type="double" value="0.0" />
  </node>
</launch>
