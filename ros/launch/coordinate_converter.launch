<launch>

  <!--Launch Sensor Setup with USB Cam and Pico Flexx TOF Camera-->
  <rosparam file="$(find common)/config/parameters.yaml" />

  <include file="$(find pico_flexx_driver)/launch/pico_flexx_driver.launch">
        <param name="publish_tf" value="true"/>
        <param name="use_case" value="0"/>
  </include>

  <include file="$(find coordinate_converter)/launch/orbslam_supplement.launch">
  </include>

  <!--Launch RVIZ to visualise Status and current Robot Configuration-->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find common)/config/rviz_orb_slam2.rviz">
  </node>

  <!--Grouping-->
  <include file="$(find common)/launch/configuration_real.launch">
  </include>

  <!-- Launch SLAM Algorithm -->
  <node name="orb_slam2_mono" pkg="orb_slam2_ros"
      type="orb_slam2_ros_mono" output="screen">

       <param name="publish_pointcloud" type="bool" value="false" />
       <param name="publish_pose" type="bool" value="true" />
       <param name="localize_only" type="bool" value="false" />
       <param name="reset_map" type="bool" value="false" />

       <!-- static parameters -->
       <param name="load_map" type="bool" value="false" />
       <param name="map_file" type="string" value="map.bin" />
       <param name="voc_file" type="string" value="$(find orb_slam2_ros)/orb_slam2/Vocabulary/ORBvoc.txt" />

       <param name="pointcloud_frame_id" type="string" value="map" />
       <param name="camera_frame_id" type="string" value="chassis" />
       <param name="target_frame_id" type="string" value="chassis"/>
       <param name="min_num_kf_in_map" type="int" value="5" />

       <!-- ORB parameters -->
       <param name="/ORBextractor/nFeatures" type="int" value="2000" />
       <param name="/ORBextractor/scaleFactor" type="double" value="1.2" />
       <param name="/ORBextractor/nLevels" type="int" value="8" />
       <param name="/ORBextractor/iniThFAST" type="int" value="20" />
       <param name="/ORBextractor/minThFAST" type="int" value="7" />

       <!-- Camera parameters -->
       <param name="camera_fps" type="int" value="30" />
       <!-- Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale) -->
       <param name="camera_rgb_encoding" type="bool" value="true" />
        <!--If the node should wait for a camera_info topic to take the camera calibration data-->
       <param name="load_calibration_from_cam" type="bool" value="true" />
  </node>

  <node name="slam_adjuster" pkg="slam_adjuster" type="slam_adjuster_node">
  </node>

  <node name="coordinate_converter" pkg="coordinate_converter" type="coordinate_converter_node">
  </node>
  
</launch>
